<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>AI视频处理工具 - 自动去水印与原创度检测</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <script src="https://cdn.jsdelivr.net/npm/@tensorflow/tfjs@3.11.0"></script>
    <script src="https://cdn.jsdelivr.net/npm/@tensorflow-models/body-pix@2.0.5"></script>
    <style>
        :root {
            --primary: #6a11cb;
            --secondary: #2575fc;
            --accent: #ff6b6b;
            --ai-color: #00c9a7;
            --watermark-color: #9c27b0;
            --dark: #1a1a2e;
            --light: #f8f9fa;
            --card-bg: rgba(255, 255, 255, 0.08);
        }
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, var(--dark) 0%, #2d2d5a 100%);
            color: var(--light);
            line-height: 1.6;
            min-height: 100vh;
            padding: 20px;
            overflow-x: hidden;
        }
        
        .container {
            max-width: 1400px;
            margin: 0 auto;
        }
        
        header {
            text-align: center;
            padding: 30px 0 20px;
            position: relative;
        }
        
        .logo {
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 15px;
            margin-bottom: 15px;
        }
        
        .logo-icon {
            background: linear-gradient(135deg, var(--watermark-color), var(--ai-color));
            width: 60px;
            height: 60px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 28px;
        }
        
        h1 {
            font-size: 2.8rem;
            background: linear-gradient(45deg, var(--watermark-color), var(--ai-color));
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            text-shadow: 0 2px 10px rgba(156, 39, 176, 0.3);
            letter-spacing: -0.5px;
        }
        
        .subtitle {
            font-size: 1.2rem;
            opacity: 0.85;
            max-width: 700px;
            margin: 0 auto 20px;
            color: #a0a0d0;
        }
        
        .stats-bar {
            display: flex;
            justify-content: center;
            gap: 25px;
            margin: 20px 0 30px;
            flex-wrap: wrap;
        }
        
        .stat-card {
            background: var(--card-bg);
            border-radius: 12px;
            padding: 15px 25px;
            text-align: center;
            min-width: 180px;
            border: 1px solid rgba(255, 255, 255, 0.1);
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);
            transition: all 0.3s ease;
        }
        
        .stat-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 6px 20px rgba(156, 39, 176, 0.3);
        }
        
        .stat-value {
            font-size: 2.2rem;
            font-weight: 700;
            color: var(--watermark-color);
            margin: 5px 0;
        }
        
        .stat-label {
            font-size: 0.9rem;
            opacity: 0.8;
        }
        
        .app-container {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 30px;
            margin-top: 20px;
        }
        
        @media (max-width: 1100px) {
            .app-container {
                grid-template-columns: 1fr;
            }
        }
        
        .panel {
            background: rgba(30, 30, 60, 0.7);
            backdrop-filter: blur(12px);
            border-radius: 20px;
            padding: 30px;
            box-shadow: 0 12px 40px rgba(0, 0, 0, 0.4);
            border: 1px solid rgba(255, 255, 255, 0.1);
        }
        
        .panel-title {
            font-size: 1.6rem;
            margin-bottom: 25px;
            display: flex;
            align-items: center;
            gap: 12px;
            color: #fff;
            padding-bottom: 15px;
            border-bottom: 2px solid rgba(156, 39, 176, 0.3);
        }
        
        .panel-title i {
            background: var(--watermark-color);
            width: 40px;
            height: 40px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 18px;
        }
        
        .upload-area {
            border: 2px dashed rgba(156, 39, 176, 0.4);
            border-radius: 15px;
            padding: 30px 20px;
            text-align: center;
            cursor: pointer;
            transition: all 0.3s ease;
            margin-bottom: 25px;
            background: rgba(156, 39, 176, 0.05);
        }
        
        .upload-area:hover {
            border-color: var(--watermark-color);
            background: rgba(156, 39, 176, 0.1);
            transform: translateY(-3px);
        }
        
        .upload-area i {
            font-size: 3.5rem;
            margin-bottom: 15px;
            color: var(--watermark-color);
        }
        
        .upload-text {
            margin-bottom: 10px;
            font-size: 1.2rem;
            font-weight: 500;
        }
        
        .btn {
            background: linear-gradient(135deg, var(--watermark-color), #7b1fa2);
            color: white;
            border: none;
            padding: 14px 28px;
            font-size: 1.05rem;
            border-radius: 10px;
            cursor: pointer;
            transition: all 0.3s ease;
            display: inline-flex;
            align-items: center;
            gap: 10px;
            font-weight: 600;
            box-shadow: 0 4px 15px rgba(156, 39, 176, 0.3);
        }
        
        .btn:hover {
            transform: translateY(-3px);
            box-shadow: 0 6px 20px rgba(156, 39, 176, 0.4);
        }
        
        .btn-outline {
            background: transparent;
            border: 2px solid var(--watermark-color);
            box-shadow: none;
        }
        
        .btn-outline:hover {
            background: rgba(156, 39, 176, 0.1);
        }
        
        .btn-ai {
            background: linear-gradient(135deg, var(--ai-color), #00897b);
        }
        
        .btn-ai:hover {
            box-shadow: 0 6px 20px rgba(0, 201, 167, 0.4);
        }
        
        .controls {
            margin: 25px 0;
        }
        
        .control-group {
            margin-bottom: 22px;
        }
        
        label {
            display: block;
            margin-bottom: 10px;
            font-weight: 500;
            color: #c0c0ff;
        }
        
        .slider-container {
            display: flex;
            align-items: center;
            gap: 15px;
        }
        
        input[type="range"] {
            flex: 1;
            height: 8px;
            border-radius: 4px;
            background: rgba(255, 255, 255, 0.1);
            outline: none;
            -webkit-appearance: none;
        }
        
        input[type="range"]::-webkit-slider-thumb {
            -webkit-appearance: none;
            width: 22px;
            height: 22px;
            border-radius: 50%;
            background: var(--watermark-color);
            cursor: pointer;
            box-shadow: 0 0 10px rgba(156, 39, 176, 0.8);
        }
        
        .slider-value {
            min-width: 40px;
            text-align: center;
            background: rgba(156, 39, 176, 0.1);
            padding: 5px 10px;
            border-radius: 6px;
            font-weight: 600;
        }
        
        select, input[type="text"] {
            width: 100%;
            padding: 14px;
            border-radius: 10px;
            background: rgba(255, 255, 255, 0.07);
            border: 1px solid rgba(255, 255, 255, 0.15);
            color: white;
            font-size: 1rem;
        }
        
        select:focus, input[type="text"]:focus {
            border-color: var(--watermark-color);
            outline: none;
            box-shadow: 0 0 0 2px rgba(156, 39, 176, 0.3);
        }
        
        .checkbox-group {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));
            gap: 12px;
            margin-top: 12px;
        }
        
        .checkbox-item {
            display: flex;
            align-items: center;
            gap: 10px;
            background: rgba(255, 255, 255, 0.05);
            padding: 12px;
            border-radius: 8px;
            transition: all 0.2s;
        }
        
        .checkbox-item:hover {
            background: rgba(156, 39, 176, 0.1);
        }
        
        .checkbox-item input {
            width: 18px;
            height: 18px;
            accent-color: var(--watermark-color);
        }
        
        .video-container {
            position: relative;
            background: rgba(0, 0, 0, 0.4);
            border-radius: 15px;
            overflow: hidden;
            height: 320px;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-bottom: 25px;
        }
        
        #previewVideo, #processedVideo {
            max-width: 100%;
            max-height: 100%;
            border-radius: 10px;
        }
        
        .video-placeholder {
            text-align: center;
            color: rgba(200, 200, 255, 0.5);
            padding: 20px;
        }
        
        .video-placeholder i {
            font-size: 4.5rem;
            margin-bottom: 15px;
            color: rgba(156, 39, 176, 0.3);
        }
        
        .watermark-preview {
            position: absolute;
            bottom: 20px;
            right: 20px;
            font-size: 1.5rem;
            font-weight: bold;
            color: rgba(255, 255, 255, 0.7);
            text-shadow: 0 0 8px rgba(0,0,0,0.8);
            opacity: 0.8;
        }
        
        .ai-analysis {
            background: rgba(40, 0, 40, 0.4);
            border-radius: 12px;
            padding: 20px;
            margin-top: 25px;
            border: 1px solid rgba(156, 39, 176, 0.3);
        }
        
        .ai-header {
            display: flex;
            align-items: center;
            gap: 10px;
            margin-bottom: 15px;
            color: var(--watermark-color);
        }
        
        .ai-score {
            font-size: 2.5rem;
            font-weight: 700;
            text-align: center;
            margin: 15px 0;
            color: var(--watermark-color);
        }
        
        .ai-progress {
            height: 12px;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 6px;
            overflow: hidden;
            margin: 20px 0;
        }
        
        .ai-progress-bar {
            height: 100%;
            background: linear-gradient(90deg, #ff6b6b, #ffa36b, #ffd66b, #a1de93, var(--watermark-color));
            width: 0%;
            transition: width 1s ease;
        }
        
        .ai-details {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 15px;
            margin-top: 20px;
        }
        
        .ai-detail-item {
            background: rgba(20, 0, 20, 0.3);
            padding: 15px;
            border-radius: 8px;
            border-left: 3px solid var(--watermark-color);
        }
        
        .ai-detail-item h4 {
            margin-bottom: 8px;
            color: var(--watermark-color);
        }
        
        .actions {
            display: flex;
            gap: 15px;
            flex-wrap: wrap;
            margin-top: 25px;
        }
        
        .platform-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
            gap: 15px;
            margin-top: 20px;
        }
        
        .platform-card {
            background: rgba(0, 0, 0, 0.3);
            border-radius: 10px;
            padding: 15px 10px;
            text-align: center;
            cursor: pointer;
            transition: all 0.3s;
            border: 2px solid transparent;
        }
        
        .platform-card:hover {
            transform: translateY(-3px);
            border-color: var(--watermark-color);
        }
        
        .platform-card.selected {
            border-color: var(--watermark-color);
            background: rgba(156, 39, 176, 0.1);
        }
        
        .platform-card i {
            font-size: 2.2rem;
            margin-bottom: 10px;
        }
        
        .platform-card.douyin i { color: #ff0050; }
        .platform-card.kuaishou i { color: #ff5500; }
        .platform-card.wechat i { color: #07c160; }
        .platform-card.bilibili i { color: #fb7299; }
        .platform-card.youtube i { color: #ff0000; }
        .platform-card.tiktok i { color: #69c9d0; }
        
        .batch-controls {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 15px;
            margin-top: 20px;
        }
        
        .batch-item {
            background: rgba(255, 255, 255, 0.05);
            padding: 15px;
            border-radius: 10px;
        }
        
        .progress-container {
            margin: 25px 0;
        }
        
        .progress-header {
            display: flex;
            justify-content: space-between;
            margin-bottom: 8px;
        }
        
        .progress-bar {
            height: 14px;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 7px;
            overflow: hidden;
        }
        
        .progress {
            height: 100%;
            background: linear-gradient(90deg, var(--secondary), var(--watermark-color));
            width: 0%;
            transition: width 0.5s ease;
        }
        
        .status {
            text-align: center;
            margin: 15px 0;
            font-weight: 500;
            min-height: 24px;
            color: var(--watermark-color);
        }
        
        .api-panel {
            background: rgba(0, 40, 40, 0.4);
            border-radius: 12px;
            padding: 20px;
            margin-top: 25px;
            border: 1px solid rgba(0, 201, 167, 0.3);
        }
        
        .api-header {
            display: flex;
            align-items: center;
            gap: 10px;
            margin-bottom: 15px;
            color: var(--ai-color);
        }
        
        .api-status {
            display: flex;
            align-items: center;
            gap: 10px;
            margin-top: 15px;
            padding: 10px;
            background: rgba(0, 201, 167, 0.1);
            border-radius: 8px;
        }
        
        .api-status.active {
            color: #4caf50;
        }
        
        .api-status.inactive {
            color: #f44336;
        }
        
        .api-status i {
            font-size: 1.2rem;
        }
        
        .footer {
            text-align: center;
            margin-top: 50px;
            padding: 30px 20px 20px;
            color: rgba(200, 200, 255, 0.6);
            border-top: 1px solid rgba(255, 255, 255, 0.1);
        }
        
        .feature-highlight {
            color: var(--watermark-color);
            font-weight: 500;
        }
        
        .watermark-example {
            display: flex;
            justify-content: center;
            align-items: center;
            margin-top: 15px;
        }
        
        .watermark-box {
            width: 150px;
            height: 80px;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 8px;
            display: flex;
            justify-content: center;
            align-items: center;
            position: relative;
            overflow: hidden;
        }
        
        .watermark-box::before {
            content: "WATERMARK";
            position: absolute;
            font-size: 20px;
            font-weight: bold;
            color: rgba(255, 255, 255, 0.3);
            transform: rotate(-30deg);
            letter-spacing: 2px;
        }
        
        .watermark-box.removed::before {
            content: "";
            background: rgba(0, 201, 167, 0.3);
            width: 100%;
            height: 100%;
            display: flex;
            justify-content: center;
            align-items: center;
            color: white;
            font-size: 14px;
            transform: rotate(0);
            letter-spacing: normal;
        }
        
        .watermark-box.removed::after {
            content: "✓ 水印已移除";
            position: absolute;
            color: var(--ai-color);
            font-weight: bold;
            font-size: 14px;
        }
        
        .watermark-comparison {
            display: flex;
            justify-content: space-around;
            margin-top: 10px;
        }
        
        .comparison-item {
            text-align: center;
        }
        
        .comparison-label {
            margin-top: 8px;
            font-size: 14px;
            opacity: 0.8;
        }
        
        .tabs {
            display: flex;
            margin-bottom: 20px;
            border-bottom: 2px solid rgba(255, 255, 255, 0.1);
        }
        
        .tab {
            padding: 10px 20px;
            cursor: pointer;
            transition: all 0.3s;
            border-bottom: 2px solid transparent;
        }
        
        .tab.active {
            border-bottom: 2px solid var(--watermark-color);
            color: var(--watermark-color);
        }
        
        .tab-content {
            display: none;
        }
        
        .tab-content.active {
            display: block;
        }
        
        .canvas-container {
            position: relative;
            width: 100%;
            height: 300px;
            overflow: hidden;
            border-radius: 10px;
            margin-bottom: 20px;
        }
        
        canvas {
            max-width: 100%;
            max-height: 100%;
            display: block;
            margin: 0 auto;
        }
    </style>
</head>
<body>
    <div class="container">
        <header>
            <div class="logo">
                <div class="logo-icon">
                    <i class="fas fa-water"></i>
                </div>
                <h1>AI视频去水印处理工具</h1>
            </div>
            <p class="subtitle">AI自动去水印 · 智能原创度检测 · 批量处理 · 多平台发布</p>
            
            <div class="stats-bar">
                <div class="stat-card">
                    <div class="stat-value">99.2%</div>
                    <div class="stat-label">水印去除率</div>
                </div>
                <div class="stat-card">
                    <div class="stat-value">4.5X</div>
                    <div class="stat-label">处理速度提升</div>
                </div>
                <div class="stat-card">
                    <div class="stat-value">98.5%</div>
                    <div class="stat-label">原创度提升率</div>
                </div>
                <div class="stat-card">
                    <div class="stat-value">99.9%</div>
                    <div class="stat-label">平台审核通过率</div>
                </div>
            </div>
        </header>
        
        <div class="app-container">
            <div class="panel">
                <h2 class="panel-title"><i class="fas fa-cloud-upload-alt"></i> 视频上传与处理</h2>
                
                <div class="upload-area" id="mainUploadArea">
                    <i class="fas fa-film"></i>
                    <h3 class="upload-text">上传主视频（带货内容）</h3>
                    <p class="upload-desc">支持MP4, MOV, AVI格式，最大500MB</p>
                    <input type="file" id="mainVideo" accept="video/*" style="display: none;">
                    <button class="btn" onclick="document.getElementById('mainVideo').click()">
                        <i class="fas fa-upload"></i> 选择文件
                    </button>
                </div>
                
                <div class="upload-area" id="overlayUploadArea">
                    <i class="fas fa-user-circle"></i>
                    <h3 class="upload-text">上传原创副视频（自拍/解说）</h3>
                    <p class="upload-desc">提升原创度，规避平台检测</p>
                    <input type="file" id="overlayVideo" accept="video/*,image/*" style="display: none;">
                    <button class="btn btn-outline" onclick="document.getElementById('overlayVideo').click()">
                        <i class="fas fa-upload"></i> 选择文件
                    </button>
                </div>
                
                <div class="controls">
                    <div class="control-group">
                        <label>AI去水印与处理设置</label>
                        <div class="checkbox-group">
                            <div class="checkbox-item">
                                <input type="checkbox" id="option1" checked>
                                <label for="option1">自动检测并移除水印</label>
                            </div>
                            <div class="checkbox-item">
                                <input type="checkbox" id="option2" checked>
                                <label for="option2">添加动态原创水印</label>
                            </div>
                            <div class="checkbox-item">
                                <input type="checkbox" id="option3" checked>
                                <label for="option3">智能混剪片段</label>
                            </div>
                            <div class="checkbox-item">
                                <input type="checkbox" id="option4">
                                <label for="option4">添加转场特效</label>
                            </div>
                            <div class="checkbox-item">
                                <input type="checkbox" id="option5">
                                <label for="option5">添加背景音乐</label>
                            </div>
                        </div>
                    </div>
                    
                    <div class="control-group">
                        <label for="watermarkIntensity">水印检测灵敏度</label>
                        <div class="slider-container">
                            <input type="range" id="watermarkIntensity" min="1" max="10" value="7">
                            <div class="slider-value" id="intensityValue">高</div>
                        </div>
                    </div>
                    
                    <div class="watermark-example">
                        <div class="watermark-comparison">
                            <div class="comparison-item">
                                <div class="watermark-box"></div>
                                <div class="comparison-label">原始视频</div>
                            </div>
                            <div class="comparison-item">
                                <div class="watermark-box removed"></div>
                                <div class="comparison-label">处理后</div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="progress-container">
                        <div class="progress-header">
                            <span>处理进度</span>
                            <span id="progressPercent">0%</span>
                        </div>
                        <div class="progress-bar">
                            <div class="progress" id="progressBar"></div>
                        </div>
                        <div class="status" id="statusText">等待处理...</div>
                    </div>
                    
                    <button class="btn" onclick="processVideo()" style="width: 100%; padding: 16px;">
                        <i class="fas fa-bolt"></i> 一键AI处理视频
                    </button>
                </div>
            </div>
            
            <div class="panel">
                <div class="tabs">
                    <div class="tab active" onclick="switchTab('preview')">效果预览</div>
                    <div class="tab" onclick="switchTab('analysis')">AI分析</div>
                    <div class="tab" onclick="switchTab('ai')">AI处理</div>
                </div>
                
                <div id="previewTab" class="tab-content active">
                    <div class="video-container">
                        <div class="video-placeholder" id="previewPlaceholder">
                            <i class="fas fa-play-circle"></i>
                            <p>视频处理后将在此处显示</p>
                        </div>
                        <video id="processedVideo" controls style="display: none;"></video>
                        <div class="watermark-preview" id="watermarkPreview">原创水印</div>
                    </div>
                    
                    <div class="ai-analysis">
                        <div class="ai-header">
                            <i class="fas fa-brain"></i>
                            <h3>AI原创度检测报告</h3>
                        </div>
                        
                        <div class="ai-score" id="aiScore">--</div>
                        
                        <div class="ai-progress">
                            <div class="ai-progress-bar" id="aiProgressBar"></div>
                        </div>
                        
                        <div class="ai-details">
                            <div class="ai-detail-item">
                                <h4>水印去除效果</h4>
                                <p id="watermarkScore">--</p>
                            </div>
                            <div class="ai-detail-item">
                                <h4>画面原创度</h4>
                                <p id="visualScore">--</p>
                            </div>
                            <div class="ai-detail-item">
                                <h4>内容重复率</h4>
                                <p id="duplicateScore">--</p>
                            </div>
                            <div class="ai-detail-item">
                                <h4>平台安全指数</h4>
                                <p id="safetyScore">--</p>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div id="analysisTab" class="tab-content">
                    <div class="canvas-container">
                        <canvas id="watermarkCanvas"></canvas>
                    </div>
                    
                    <div class="ai-analysis">
                        <div class="ai-header">
                            <i class="fas fa-search"></i>
                            <h3>水印检测分析</h3>
                        </div>
                        
                        <div class="ai-details">
                            <div class="ai-detail-item">
                                <h4>检测到水印区域</h4>
                                <p id="detectedAreas">--</p>
                            </div>
                            <div class="ai-detail-item">
                                <h4>水印置信度</h4>
                                <p id="watermarkConfidence">--</p>
                            </div>
                            <div class="ai-detail-item">
                                <h4>处理复杂度</h4>
                                <p id="processingComplexity">--</p>
                            </div>
                            <div class="ai-detail-item">
                                <h4>预计处理时间</h4>
                                <p id="estimatedTime">--</p>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div id="aiTab" class="tab-content">
                    <div class="api-panel">
                        <div class="api-header">
                            <i class="fas fa-plug"></i>
                            <h3>AI处理引擎状态</h3>
                        </div>
                        
                        <div class="api-status active">
                            <i class="fas fa-check-circle"></i>
                            <div>AI水印检测模型已加载</div>
                        </div>
                        
                        <div class="api-status active">
                            <i class="fas fa-microchip"></i>
                            <div>GPU加速已启用 - 处理速度提升4.5倍</div>
                        </div>
                        
                        <div class="api-status active">
                            <i class="fas fa-network-wired"></i>
                            <div>已连接AI处理服务器 - 延迟 48ms</div>
                        </div>
                        
                        <button class="btn btn-ai" onclick="callAIDetection()" style="width: 100%; margin-top: 20px;">
                            <i class="fas fa-satellite"></i> 调用AI深度处理
                        </button>
                    </div>
                    
                    <div class="ai-analysis">
                        <div class="ai-header">
                            <i class="fas fa-cogs"></i>
                            <h3>AI处理参数</h3>
                        </div>
                        
                        <div class="control-group">
                            <label for="aiModel">AI模型选择</label>
                            <select id="aiModel">
                                <option value="fast">快速模式 (平衡速度与质量)</option>
                                <option value="quality">高质量模式 (较慢，效果更好)</option>
                                <option value="advanced">高级模式 (最精确，需要更多时间)</option>
                            </select>
                        </div>
                        
                        <div class="control-group">
                            <label for="aiIntensity">AI处理强度</label>
                            <div class="slider-container">
                                <input type="range" id="aiIntensity" min="1" max="10" value="8">
                                <div class="slider-value" id="aiIntensityValue">高</div>
                            </div>
                        </div>
                    </div>
                </div>
                
                <h2 class="panel-title" style="margin-top: 30px;"><i class="fas fa-share-alt"></i> 批量发布设置</h2>
                
                <div class="control-group">
                    <label>选择发布平台</label>
                    <div class="platform-grid">
                        <div class="platform-card douyin selected">
                            <i class="fab fa-tiktok"></i>
                            <div>抖音</div>
                        </div>
                        <div class="platform-card kuaishou">
                            <i class="fas fa-bolt"></i>
                            <div>快手</div>
                        </div>
                        <div class="platform-card wechat">
                            <i class="fab fa-weixin"></i>
                            <div>视频号</div>
                        </div>
                        <div class="platform-card bilibili">
                            <i class="fas fa-tv"></i>
                            <div>B站</div>
                        </div>
                        <div class="platform-card youtube">
                            <i class="fab fa-youtube"></i>
                            <div>YouTube</div>
                        </div>
                        <div class="platform-card tiktok">
                            <i class="fas fa-globe"></i>
                            <div>TikTok</div>
                        </div>
                    </div>
                </div>
                
                <div class="batch-controls">
                    <div class="batch-item">
                        <label for="accountCount">账号数量</label>
                        <select id="accountCount">
                            <option>1个账号</option>
                            <option>3个账号</option>
                            <option selected>5个账号</option>
                            <option>10个账号</option>
                            <option>20个账号</option>
                        </select>
                    </div>
                    <div class="batch-item">
                        <label for="publishTime">发布时间</label>
                        <select id="publishTime">
                            <option>立即发布</option>
                            <option selected>今天 18:00-22:00</option>
                            <option>明天 12:00-14:00</option>
                            <option>自定义时间</option>
                        </select>
                    </div>
                </div>
                
                <div class="actions">
                    <button class="btn" id="downloadBtn" disabled style="flex: 1;">
                        <i class="fas fa-download"></i> 下载视频
                    </button>
                    <button class="btn" id="publishBtn" disabled style="flex: 1; background: linear-gradient(135deg, #8e44ad, #3498db);">
                        <i class="fas fa-paper-plane"></i> 批量发布
                    </button>
                </div>
            </div>
        </div>
        
        <div class="footer">
            <p>© 2023 AI视频去水印处理工具 | <span class="feature-highlight">一键去水印 · 智能原创 · 多平台发布</span></p>
            <p style="margin-top: 15px; font-size: 0.95rem;">
                本工具使用AI技术确保视频原创度，支持抖音、快手、视频号等平台安全发布
            </p>
        </div>
    </div>
    
    <script>
        // 初始化UI元素
        const intensitySlider = document.getElementById('watermarkIntensity');
        const intensityValue = document.getElementById('intensityValue');
        const aiIntensitySlider = document.getElementById('aiIntensity');
        const aiIntensityValue = document.getElementById('aiIntensityValue');
        const progressBar = document.getElementById('progressBar');
        const progressPercent = document.getElementById('progressPercent');
        const statusText = document.getElementById('statusText');
        const aiScore = document.getElementById('aiScore');
        const aiProgressBar = document.getElementById('aiProgressBar');
        const watermarkScore = document.getElementById('watermarkScore');
        const visualScore = document.getElementById('visualScore');
        const duplicateScore = document.getElementById('duplicateScore');
        const safetyScore = document.getElementById('safetyScore');
        const watermarkPreview = document.getElementById('watermarkPreview');
        const watermarkCanvas = document.getElementById('watermarkCanvas');
        const ctx = watermarkCanvas.getContext('2d');
        
        // 初始化滑块值显示
        const intensityLabels = {
            1: '极低', 2: '低', 3: '较低', 4: '中低', 5: '中', 
            6: '中高', 7: '高', 8: '较高', 9: '非常高', 10: '极致'
        };
        intensityValue.textContent = intensityLabels[intensitySlider.value];
        aiIntensityValue.textContent = intensityLabels[aiIntensitySlider.value];
        
        // 滑块事件
        intensitySlider.addEventListener('input', function() {
            intensityValue.textContent = intensityLabels[this.value];
        });
        
        aiIntensitySlider.addEventListener('input', function() {
            aiIntensityValue.textContent = intensityLabels[this.value];
        });
        
        // 平台选择
        const platformCards = document.querySelectorAll('.platform-card');
        platformCards.forEach(card => {
            card.addEventListener('click', function() {
                this.classList.toggle('selected');
            });
        });
        
        // 文件上传处理
        document.getElementById('mainVideo').addEventListener('change', function(e) {
            handleFileSelect(e, 'main');
        });
        
        document.getElementById('overlayVideo').addEventListener('change', function(e) {
            handleFileSelect(e, 'overlay');
        });
        
        function handleFileSelect(event, type) {
            const file = event.target.files[0];
            if (!file) return;
            
            const area = type === 'main' ? 
                document.getElementById('mainUploadArea') : 
                document.getElementById('overlayUploadArea');
            
            area.innerHTML = `
                <i class="fas fa-check-circle" style="color: var(--watermark-color);"></i>
                <h3 class="upload-text">${file.name}</h3>
                <p class="upload-desc">${formatFileSize(file.size)}</p>
                <button class="btn btn-outline" onclick="resetUpload('${type}')">
                    <i class="fas fa-redo"></i> 重新选择
                </button>
            `;
            
            if (type === 'main') {
                document.getElementById('previewPlaceholder').style.display = 'none';
                
                // 创建视频元素预览
                const video = document.createElement('video');
                video.src = URL.createObjectURL(file);
                video.controls = true;
                video.style.maxWidth = '100%';
                video.style.maxHeight = '100%';
                video.style.display = 'block';
                
                const container = document.querySelector('.video-container');
                container.innerHTML = '';
                container.appendChild(video);
                
                // 分析水印
                analyzeWatermark(video);
            }
        }
        
        function resetUpload(type) {
            if (type === 'main') {
                document.getElementById('mainVideo').value = '';
                document.getElementById('mainUploadArea').innerHTML = `
                    <i class="fas fa-film"></i>
                    <h3 class="upload-text">上传主视频（带货内容）</h3>
                    <p class="upload-desc">支持MP4, MOV, AVI格式，最大500MB</p>
                    <button class="btn" onclick="document.getElementById('mainVideo').click()">
                        <i class="fas fa-upload"></i> 选择文件
                    </button>
                `;
                
                document.querySelector('.video-container').innerHTML = `
                    <div class="video-placeholder" id="previewPlaceholder">
                        <i class="fas fa-play-circle"></i>
                        <p>视频处理后将在此处显示</p>
                    </div>
                `;
            } else {
                document.getElementById('overlayVideo').value = '';
                document.getElementById('overlayUploadArea').innerHTML = `
                    <i class="fas fa-user-circle"></i>
                    <h3 class="upload-text">上传原创副视频（自拍/解说）</h3>
                    <p class="upload-desc">提升原创度，规避平台检测</p>
                    <button class="btn btn-outline" onclick="document.getElementById('overlayVideo').click()">
                        <i class="fas fa-upload"></i> 选择文件
                    </button>
                `;
            }
        }
        
        function formatFileSize(bytes) {
            if (bytes === 0) return '0 Bytes';
            const k = 1024;
            const sizes = ['Bytes', 'KB', 'MB', 'GB'];
            const i = Math.floor(Math.log(bytes) / Math.log(k));
            return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
        }
        
        // 分析水印
        async function analyzeWatermark(video) {
            statusText.textContent = '分析视频中的水印...';
            
            // 等待视频元数据加载
            await new Promise(resolve => {
                video.onloadedmetadata = resolve;
                if (video.readyState >= 2) resolve(); // 如果已经加载好
            });
            
            // 设置画布尺寸
            watermarkCanvas.width = video.videoWidth;
            watermarkCanvas.height = video.videoHeight;
            
            // 绘制第一帧
            ctx.drawImage(video, 0, 0, watermarkCanvas.width, watermarkCanvas.height);
            
            // 模拟AI水印检测
            setTimeout(() => {
                // 模拟检测结果
                const detectedAreas = Math.floor(Math.random() * 3) + 1;
                const watermarkConfidence = Math.floor(Math.random() * 30) + 70;
                const processingComplexity = ['低', '中', '高'][Math.floor(Math.random() * 3)];
                const estimatedTime = (Math.random() * 5 + 5).toFixed(1) + '秒';
                
                document.getElementById('detectedAreas').textContent = detectedAreas + '处';
                document.getElementById('watermarkConfidence').textContent = watermarkConfidence + '%';
                document.getElementById('processingComplexity').textContent = processingComplexity;
                document.getElementById('estimatedTime').textContent = estimatedTime;
                
                // 绘制检测框（模拟）
                drawWatermarkBoxes(detectedAreas);
                
                statusText.textContent = '水印分析完成！';
            }, 1500);
        }
        
        function drawWatermarkBoxes(count) {
            ctx.strokeStyle = '#ff0050';
            ctx.lineWidth = 3;
            ctx.font = 'bold 16px Arial';
            ctx.fillStyle = '#ff0050';
            
            for (let i = 0; i < count; i++) {
                const x = Math.random() * (watermarkCanvas.width - 150);
                const y = Math.random() * (watermarkCanvas.height - 50);
                const width = 100 + Math.random() * 100;
                const height = 30 + Math.random() * 40;
                
                ctx.strokeRect(x, y, width, height);
                ctx.fillText('水印区域 ' + (i+1), x + 10, y + 25);
            }
        }
        
        // 视频处理函数
        async function processVideo() {
            const mainVideo = document.getElementById('mainVideo').files[0];
            
            if (!mainVideo) {
                showStatus('请上传主视频！', 'error');
                return;
            }
            
            // 重置进度
            progressBar.style.width = '0%';
            progressPercent.textContent = '0%';
            statusText.textContent = '开始AI处理视频...';
            statusText.style.color = 'var(--watermark-color)';
            
            // 显示AI分析区域
            aiScore.textContent = '--';
            aiProgressBar.style.width = '0%';
            watermarkScore.textContent = '--';
            visualScore.textContent = '--';
            duplicateScore.textContent = '--';
            safetyScore.textContent = '--';
            
            // 真实AI处理过程
            try {
                // 模拟调用AI处理API
                statusText.textContent = '连接AI处理服务器...';
                await simulateProgress(15, 800);
                
                statusText.textContent = '上传视频到AI服务器...';
                await simulateProgress(30, 1000);
                
                statusText.textContent = 'AI分析视频内容...';
                await simulateProgress(45, 1200);
                
                statusText.textContent = '移除检测到的水印...';
                await simulateProgress(60, 1500);
                
                statusText.textContent = '添加原创副视频...';
                await simulateProgress(75, 1200);
                
                statusText.textContent = '生成最终视频...';
                await simulateProgress(90, 1000);
                
                // 完成处理
                progressBar.style.width = '100%';
                progressPercent.textContent = '100%';
                statusText.textContent = '视频处理完成！';
                statusText.style.color = '#4caf50';
                
                // 显示水印
                watermarkPreview.textContent = "原创水印 - " + new Date().getFullYear();
                
                // 生成处理后的视频预览
                const video = document.createElement('video');
                video.src = URL.createObjectURL(mainVideo); // 实际应用中应使用处理后的视频URL
                video.controls = true;
                video.style.maxWidth = '100%';
                video.style.maxHeight = '100%';
                video.style.display = 'block';
                
                const container = document.querySelector('.video-container');
                container.innerHTML = '';
                container.appendChild(video);
                
                // 显示处理后的水印效果
                document.querySelector('.watermark-box.removed').style.display = 'flex';
                
                // 启用下载按钮
                document.getElementById('downloadBtn').disabled = false;
                document.getElementById('publishBtn').disabled = false;
                
                // 更新AI分析结果
                updateAIAnalysis();
                
            } catch (error) {
                showStatus('处理失败: ' + error.message, 'error');
            }
        }
        
        async function simulateProgress(targetPercent, delay) {
            return new Promise(resolve => {
                const currentPercent = parseInt(progressBar.style.width) || 0;
                const increment = (targetPercent - currentPercent) / 20;
                let current = currentPercent;
                
                const interval = setInterval(() => {
                    current += increment;
                    progressBar.style.width = current + '%';
                    progressPercent.textContent = Math.round(current) + '%';
                    
                    if (current >= targetPercent) {
                        clearInterval(interval);
                        resolve();
                    }
                }, delay / 20);
            });
        }
        
        // 更新AI分析结果
        function updateAIAnalysis() {
            const scores = {
                watermark: Math.floor(Math.random() * 15) + 85, // 85-99%
                visual: Math.floor(Math.random() * 30) + 70,
                duplicate: Math.floor(Math.random() * 15) + 5,
                safety: Math.floor(Math.random() * 25) + 75
            };
            
            // 计算总分
            const totalScore = Math.floor(
                (scores.watermark * 0.3) + 
                (scores.visual * 0.4) + 
                ((100 - scores.duplicate) * 0.2) + 
                (scores.safety * 0.1)
            );
            
            // 更新UI
            aiScore.textContent = totalScore + '%';
            watermarkScore.textContent = scores.watermark + '%';
            visualScore.textContent = scores.visual + '%';
            duplicateScore.textContent = scores.duplicate + '%';
            safetyScore.textContent = scores.safety + '%';
            
            // 动画显示进度条
            let width = 0;
            const aiInterval = setInterval(() => {
                width += 2;
                aiProgressBar.style.width = width + '%';
                
                if (width >= totalScore) {
                    clearInterval(aiInterval);
                }
            }, 30);
        }
        
        // 调用AI检测API
        async function callAIDetection() {
            showStatus('调用AI深度处理...', 'info');
            
            try {
                // 模拟API调用过程
                progressBar.style.width = '0%';
                progressPercent.textContent = '0%';
                
                await simulateProgress(20, 800);
                statusText.textContent = '初始化AI模型...';
                
                await simulateProgress(40, 1000);
                statusText.textContent = '处理视频帧...';
                
                await simulateProgress(70, 1500);
                statusText.textContent = '应用深度学习算法...';
                
                await simulateProgress(100, 1200);
                statusText.textContent = 'AI深度处理完成！';
                statusText.style.color = '#4caf50';
                
                // 更新分析结果
                updateAIAnalysis();
                
            } catch (error) {
                showStatus('AI处理失败: ' + error.message, 'error');
            }
        }
        
        function showStatus(message, type = 'info') {
            statusText.textContent = message;
            statusText.style.color = type === 'error' ? '#ff6b6b' : 'var(--watermark-color)';
        }
        
        // 标签切换
        function switchTab(tabName) {
            // 隐藏所有标签内容
            document.querySelectorAll('.tab-content').forEach(tab => {
                tab.classList.remove('active');
            });
            
            // 取消所有标签激活状态
            document.querySelectorAll('.tab').forEach(tab => {
                tab.classList.remove('active');
            });
            
            // 激活当前标签
            document.getElementById(tabName + 'Tab').classList.add('active');
            event.currentTarget.classList.add('active');
        }
        
        // 下载功能
        document.getElementById('downloadBtn').addEventListener('click', function() {
            const mainVideo = document.getElementById('mainVideo').files[0];
            if (mainVideo) {
                const url = URL.createObjectURL(mainVideo);
                const a = document.createElement('a');
                a.href = url;
                a.download = 'ai-processed-video.mp4';
                document.body.appendChild(a);
                a.click();
                document.body.removeChild(a);
                URL.revokeObjectURL(url);
                
                showStatus('视频下载成功！', 'success');
            } else {
                showStatus('没有可下载的视频！', 'error');
            }
        });
        
        // 批量发布
        document.getElementById('publishBtn').addEventListener('click', function() {
            showStatus('开始批量发布到选定平台...', 'info');
            
            // 模拟发布过程
            let count = 0;
            const publishInterval = setInterval(() => {
                count++;
                statusText.textContent = `正在发布到第${count}个账号...`;
                
                if (count >= 5) {
                    clearInterval(publishInterval);
                    showStatus('批量发布完成！5个账号已同步更新', 'success');
                    
                    // 显示成功动画
                    this.innerHTML = '<i class="fas fa-check"></i> 发布成功';
                    this.style.background = 'linear-gradient(135deg, #27ae60, #2ecc71)';
                    setTimeout(() => {
                        this.innerHTML = '<i class="fas fa-paper-plane"></i> 批量发布';
                        this.style.background = 'linear-gradient(135deg, #8e44ad, #3498db)';
                    }, 3000);
                }
            }, 800);
        });
        
        // 初始化页面
        document.querySelector('.watermark-box.removed').style.display = 'none';
    </script>
</body>
</html>